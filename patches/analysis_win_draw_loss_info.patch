Index: tcl/tools/analysis.tcl
===================================================================
--- tcl/tools/analysis.tcl	(revision 3123)
+++ tcl/tools/analysis.tcl	(working copy)
@@ -105,6 +105,11 @@
   set analysis(logAuto$n) 0
   set analysis(logWait$n) 0
   set analysis(logUpdate$n) {}
+  # MJB - inserted for win/draw/lose data:-
+  set analysis(win_pc$n) 0
+  set analysis(draw_pc$n) 0
+  set analysis(lose_pc$n) 0  
+  set analysis(seenWDL$n) 0
 }
 
 resetEngines
@@ -1794,6 +1799,11 @@
   set moves $analysis(moves$n)
   set text [formatAnalysisScore $n]
 
+  # MJB - Add WDL probability, if any produced by engine, to conventional centipawns score:-
+  if {$analysis(seenWDL$n) && [info exists analysis(WDL$n,0)] } {
+    append text " $analysis(WDL$n,0)"
+  }
+
   if {$isAt_vend} {
     # get the last move of the game
     set lastMove [sc_game info previousMoveUCI]
@@ -1899,6 +1909,7 @@
     set v2 $analysis(multiPV$n)
   }
 
+  set idx 0
   foreach i $v1 j $v2 {
     set moves [lindex $i 2]
 
@@ -1910,6 +1921,10 @@
       set text $tmp_scoremate
     }
 
+    if {$analysis(seenWDL$n) && [info exists analysis(WDL$n,$idx)] } {
+      append text " $analysis(WDL$n,$idx)"
+    }
+
     if {$addAtEnd} {
       # get the last move of the game
       set lastMove [sc_game info previousMoveUCI]
@@ -1937,6 +1952,7 @@
       sc_move forward
     }
 
+    incr idx
   }
 
   ::pgn::Refresh 1 
@@ -3441,12 +3457,25 @@
       $t insert end "[tr Nodes]: "
       $t insert end [ format "%6uK (%u kn/s) " $analysis(nodes$n) $nps ]
       $t insert end "[tr Time]: "
-      $t insert end [ format "%6.2f s" $analysis(time$n) ]
-      $t insert end \n
-      $t insert end "NPS: [format "%u " $analysis(nps$n)] "
+      $t insert end [ format "%6.2fs" $analysis(time$n) ]
+
+      # Different padding if seenWDL (Win/Draw/Loss)
+      if {$analysis(seenWDL$n)} {
+	$t insert end " NPS: [format "%u " $analysis(nps$n)]"
+	$t insert end \n
+      } else {
+	$t insert end \n
+	$t insert end "NPS: [format "%u " $analysis(nps$n)] "
+      }
+
       $t insert end "Hash: $::uci::uciInfo(hashfull$n)  "
       $t insert end "Load: $::uci::uciInfo(cpuload$n) "
       $t insert end "TB hits: $::uci::uciInfo(tbhits$n) "
+
+      if {$analysis(seenWDL$n) && [info exists analysis(WDL$n,0)] } {
+        $t insert end "$analysis(WDL$n,0) "
+      }
+
       $t insert end "[tr Current]: "
       $t insert end [ format "%s (%s/%s) " [::trans $analysis(currmove$n)] $analysis(currmovenumber$n) $analysis(maxmovenumber$n)]
     } else {
Index: tcl/tools/uci.tcl
===================================================================
--- tcl/tools/uci.tcl	(revision 3123)
+++ tcl/tools/uci.tcl	(working copy)
@@ -17,11 +17,12 @@
   array set check ""
 
   # infoToken contains a list of known info tokens (used to find the end of "pv" tokens)
-  set infoToken {depth seldepth time nodes pv multipv score cp mate lowerbound upperbound currmove currmovenumber hashfull nps tbhits sbhits cpuload string refutation currline}
+  set infoToken {depth seldepth time nodes pv multipv score cp wdl mate lowerbound upperbound currmove currmovenumber hashfull nps tbhits sbhits cpuload string refutation currline}
+  # MJB - inserted "wdl" for win/draw/lose data
 
   set optionToken {name type default min max var }
   set optionImportant {MultiPV Hash OwnBook BookFile UCI_LimitStrength UCI_Elo Ponder Threads {Skill Level}}
-  set optionToKeep { UCI_LimitStrength UCI_Elo UCI_ShredderbasesPath }
+  set optionToKeep { UCI_LimitStrength UCI_Elo UCI_ShredderbasesPath UCI_ShowWDL}
   array set uciInfo {}
   ################################################################################
   #
@@ -38,6 +39,11 @@
     set uciInfo(currmovenumber$n) 0
     # hmmm
     # set uciInfo(score$n) ""
+
+    # MJB - win/draw/lose data
+    set uciInfo(win_pc$n) ""
+    set uciInfo(draw_pc$n) ""
+    set uciInfo(lose_pc$n) ""
   }
 
   proc resetUciInfo2 {n} {
@@ -258,6 +264,17 @@
            incr i
            set uciInfo(cpuload$n) [format "%u%%" [expr {round( [lindex $data $i] / 10)}]]
            continue}
+        if { $t == "wdl" } {
+	   # "wdl" is Stockfish's win/draw/lose infos, configured by UCI_ShowWDL option
+           set analysis(seenWDL$n) 1
+           incr i
+           set uciInfo(win_pc$n)  [format "%.1f" [expr {[lindex $data $i] / 10.0}]]
+           incr i
+           set uciInfo(draw_pc$n) [format "%.1f" [expr {[lindex $data $i] / 10.0}]]
+           incr i
+           set uciInfo(lose_pc$n) [format "%.1f" [expr {[lindex $data $i] / 10.0}]]				   
+           continue}		   
+	#
         if { $t == "string" } {
           # uciInfo(string) seems unused
           incr i
@@ -314,7 +331,24 @@
       }
 
       set idx [ expr $uciInfo(multipv$n) -1 ]
-      
+
+      if {$analysis(seenWDL$n)} {
+	# MJB - inserted for win/draw/lose data:-
+	set analysis(win_pc$n) $uciInfo(win_pc$n)
+	set analysis(draw_pc$n) $uciInfo(draw_pc$n)
+	set analysis(lose_pc$n) $uciInfo(lose_pc$n)
+	# MJB - If Black to move, show absolute W/D/L position, i.e.from White's point of view:-
+        if { $analysis(side$n) == "black"} {
+	  set analysis(win_pc$n) $uciInfo(lose_pc$n)
+	  set analysis(lose_pc$n) $uciInfo(win_pc$n)
+	}
+	set analysis(WDL$n,$idx) "W: $analysis(win_pc$n)% D: $analysis(draw_pc$n)% B: $analysis(lose_pc$n)%"
+      }
+ 
+      ### Process MultiPV data array
+      #   Note - $uciInfo(scoremate$n) is an integer or ""
+      #   in which case it does not get added to the list and in analysis.tcl, [lindex $pv 3] is {} - S.A
+
       if { $idx < $analysis(multiPVCount$n) } {
         if {$idx < [llength $analysis(multiPV$n)]} {
           lset analysis(multiPV$n) $idx "$uciInfo(depth$n) $uciInfo(tmp_score$n) [list $uciInfo(pv$n)] $uciInfo(scoremate$n)"
